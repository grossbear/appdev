#include <stdio.h>
#include "appwin.inc"
#include "appbase.h"

ApplicationBase * ApplicationBase::app = NULL;
///////////////////////////////////////////////////////////////////////////////
ApplicationBase * ApplicationBase::CreateSingleton()
{
    if(app == NULL)
        app = new ApplicationBase();
    
    return app;
}

///////////////////////////////////////////////////////////////////////////////
ApplicationBase * ApplicationBase::GetSingleton()
{
    return app;
}

///////////////////////////////////////////////////////////////////////////////
ApplicationBase::ApplicationBase():
running(false), window(NULL)
{
}

///////////////////////////////////////////////////////////////////////////////
ApplicationBase::~ApplicationBase()
{
    delete(window);
    window = NULL;
}

///////////////////////////////////////////////////////////////////////////////
void ApplicationBase::Init()
{
    printf("ApplicationBase Init\n");
    window = new AppWindow(100,100,400,400,0,"AppBase");
    running = window->WindowAvailable();
}

///////////////////////////////////////////////////////////////////////////////
void ApplicationBase::Release()
{
    printf("ApplicationBase Release\n");
}

///////////////////////////////////////////////////////////////////////////////
void ApplicationBase::Run()
{
    while(running)
    {
        window->ProcessEvents();
        this->Render();
    }
}

///////////////////////////////////////////////////////////////////////////////
void ApplicationBase::Render()
{
    //printf("AppBase Render\n");
}

///////////////////////////////////////////////////////////////////////////////
void ApplicationBase::OnCloseWindow()
{
    running = false;
    //delete (window);
    //window = NULL;
}

///////////////////////////////////////////////////////////////////////////////
void ApplicationBase::OnSetWindowSize(int x, int y)
{
    printf("Window size: x = %d, y = %d\n", x, y);
}

///////////////////////////////////////////////////////////////////////////////
void ApplicationBase::OnDraw()
{
}

///////////////////////////////////////////////////////////////////////////////
void ApplicationBase::OnKeyDown(unsigned char key)
{
    printf("OnKeyDown: key = %d\n",key);
}

///////////////////////////////////////////////////////////////////////////////
void ApplicationBase::OnKeyUp(unsigned char key)
{
    printf("OnKeyUp: key = %d\n", key);
}

///////////////////////////////////////////////////////////////////////////////
void ApplicationBase::OnWindowActive(bool active)
{
    printf("OnWindowAcitve: active = %d\n", active);
}

///////////////////////////////////////////////////////////////////////////////
void ApplicationBase::OnMouseMove(int x, int y)
{
    //printf("OnMouseMove: x = %d, y = %d\n", x, y);
}

///////////////////////////////////////////////////////////////////////////////
void ApplicationBase::OnMouseMove(ButtonType btype, int x, int y)
{
    //printf("OnMouseMove: btn = %d, x = %d, y = %d\n",(int)btype, x, y);
}

///////////////////////////////////////////////////////////////////////////////
void ApplicationBase::OnMouseButtonDown(ButtonType btype, int x, int y)
{
    printf("OnMouseButtonDown: btn = %d, x = %d, y = %d\n",(int)btype,x,y);
}

///////////////////////////////////////////////////////////////////////////////
void ApplicationBase::OnMouseButtonUp(ButtonType btype, int x, int y)
{
    printf("OnMouseButtonUp: btn = %d, x = %d, y = %d\n",(int)btype, x, y);
}

///////////////////////////////////////////////////////////////////////////////
void ApplicationBase::OnMouseButtonDblClk(ButtonType btype, int x, int y)
{
    printf("OnMouseDblClk: btn = %d, x = %d, y = %d\n",(int)btype, x, y);
}

///////////////////////////////////////////////////////////////////////////////
